@import "variables";

/* A container is either a row or a column */
@mixin flex-container() {
    display: -webkit-flex; 
    display: flex;
}

.row {
    @include flex-container();
    flex-direction: row;
}

.col {
    @include flex-container();
    flex-direction: row;
}


@each $key, $val in $grid-breakpoints {

    @media screen and (min-width: $val) { 

        /* FLEX CONTAINERS - sets the flex direction for each breakpoint e.g:
            row-xs
            col-xs
        
        A container should be EITHER a row OR a column 
        There is no need to have columns inside rows - that is not the way of flexbox
        */
        .row-#{$key} {
            @include flex-container();
            flex-direction: row;
        }

        .col-#{$key} {
            @include flex-container();
            flex-direction: column;
        }

        /* The reverse option simply renders the child elements in the opposite order */
        .row-reverse-#{$key} {
            @include flex-container();
            flex-direction: row-reverse;
        }

        .col-reverse-#{$key} {
            @include flex-container();
            flex-direction: column-reverse;
        }

        /* HORIZONTAL ALIGNMENTS

        1.  horizontal options (using "justify-content" property) 
            start-xs, 
            center-xs
            end-xs
        */

        .start-#{$key} {
            justify-content: flex-start;
        }

        .center-#{$key} {
            justify-content: center;
        }

        .end-#{$key} {
            justify-content: flex-end;
        }

        /* VERTICAL ALIGNMENTS

        2.  vertical options (using "align-items" property) 
            top-xs
            middle-xs
            bottom-xs
        */
        
        .top-#{$key} {
            align-items: flex-start;
            text-align: left;

        }

        .middle-#{$key} {
            align-items: center;
            text-align: center;
        }

        .bottom-#{$key} {
            align-items: flex-end;
        }

        @each $percKey, $percVal in $percentages {

            .width-#{$percKey}-#{$key} {
                width: $percVal;
            }

            .height-#{$percKey}-#{$key} {
                height: $percVal;
            }        
        }
    }
}


@each $percKey, $percVal in $percentages {

    .width-#{$percKey} {
        width: $percVal;
    }

    .height-#{$percKey} {
        height: $percVal;
    }    
}

//@import "flex-additions"

